{"id":"node_modules/typesplit/splittype.js","dependencies":[{"name":"/Users/gabrielesu/Sites/switch-landing/package.json","includedInParent":true,"mtime":1552081635353},{"name":"/Users/gabrielesu/Sites/switch-landing/node_modules/typesplit/package.json","includedInParent":true,"mtime":1552079951208}],"generated":{"js":"var define;\n/**\n * SplitType\n * A javascript utility that splits text into individual lines, words, and characters\n * so they can be animated and styled independently.\n * @updated: 6/6/2016\n * @author: Luke Peavey\n * @version: 1.0\n * @license MIT\n */\n\n\n// Support module loaders\n(function ( global, factory ) {\n  if ( typeof define === 'function' && define.amd ) {\n    define( factory );\n  } else if ( typeof exports !== 'undefined' ) {\n    module.exports = factory();\n  } else {\n    factory();\n  }\n})( this, function factory() {\n  window.SplitType = (function ( window, document, undefined ) {\n    // Fail silently on ancient browsers ( IE <= 8 )\n    if ( ! document.addEventListener || ! Function.prototype.bind ) return;\n\n    'use strict';\n    // global vars\n    var DEBUG                 = false;\n    var expando               = 'splitType' + (new Date() * 1);\n    var cache                 = {};\n    var uid                   = 0;\n    var push                  = Array.prototype.push;\n    var slice                 = Array.prototype.slice;\n    var keys                  = Object.keys;\n    var hasOwn                = Object.prototype.hasOwnProperty;\n    var defineProperty        = Object.defineProperty;\n    var defineProperties      = Object.defineProperties;\n    var getPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var createFragment        = document.createDocumentFragment.bind( document );\n    var createTextNode        = document.createTextNode.bind( document );\n\n    /**\n     * The global default settings used for all SplitType calls. Default\n     * settings can be modified via the static 'defaults' property on the\n     * SplitType constructor.\n     * @private\n     */\n    var _defaults = {\n      splitClass : '',\n      lineClass  : 'line',\n      wordClass  : 'word',\n      charClass  : 'char',\n      split      : 'lines, words, chars',\n      position   : 'relative',\n      absolute   : false, // alternate syntax for setting position.\n      tagName    : 'div',\n      DEBUG      : false,\n    };\n\n\n    /***********************\n     - Utility Functions -\n     ***********************/\n    function isObject( obj ) {\n      return obj !== null && typeof obj === 'object';\n    }\n\n    function isArraylike( obj ) {\n      return isObject( obj ) && typeof obj.length === 'number' && obj.length > 0; // returns false for empty arrays,\n                                                                                  // which is fine for our purposes\n    }\n\n    function isPlainObject( obj ) {\n      return isObject( obj ) && Object.prototype.toString.call( obj ) === '[object Object]';\n    }\n\n    function isNode( obj ) {\n      return isObject( obj ) && /^(1|3|11)$/.test( obj.nodeType );\n    }\n\n    function isString( obj ) {\n      return typeof obj === 'string';\n    }\n\n    /**\n     * Iterates array, arraylike, and plain objects\n     * NOTE: non-iterable objects gets passed through\n     * @param object object|array - the array or object to iterate\n     * @param callback function - a function to be executed once for each item in the array.\n     * @param thisArg object - the context for the callback function\n     */\n    function forEach( object, callback, thisArg ) {\n      var obj    = Object( object ); // the target object\n      var values = isArraylike( obj ) ? obj : ( isPlainObject( obj ) ? keys( obj ) : [ obj ] ); // the values to\n                                                                                                // traverse (see doc\n                                                                                                // comment)\n      var length = parseInt( values.length ) || 0; // the length of values\n      var index  = 0; // index\n      // Iterate through the values, execute the callback with three arguments:\n      // 1) the current item 2) the current index 3) the object being traversed.\n      for ( ; index < length; index ++ ) {\n        callback.call( thisArg, values[ index ], index, obj );\n      }\n    }\n\n    /**\n     * Merges user options with default settings (shallow).\n     * Returns a new object without modifying source objects.\n     * Only keys that exist on target obj will be copied to the new object.\n     * @note: non-writable properties on the target object will not be over-ridden\n     * @returns object\n     */\n    function extend( target, object ) {\n      target = Object( target );\n      object = Object( object );\n      return Object.getOwnPropertyNames( target ).reduce( function ( extended, key ) {\n        return defineProperty( extended, key, getPropertyDescriptor( object, key ) || getPropertyDescriptor( target, key ) );\n      }, {} )\n    }\n\n    /**\n     * Associates arbitrary data with DOM nodes or other objects.\n     * (shortened version of jquery's data method)\n     * @param element object - the element for which data is being set or retrieved.\n     * @param key string (optional) - the name of the data property to set or retrieve.\n     * @param value mixed (optional) - Sets the value of the specified key. any type of data.\n     */\n    function Data( element, key, value ) {\n      var data = {}, id;\n\n      if ( isObject( element ) ) {\n        id   = element[ expando ] || ( element[ expando ] = ++ uid );\n        data = cache[ id ] || ( cache[ id ] = {} );\n      }\n      // Get data\n      if ( value === undefined ) {\n        if ( key === undefined ) {\n          return data; // if no key or value is given, return the data store object\n        }\n        return data[ key ];\n      }\n      // Set data\n      else if ( key !== undefined ) {\n        data[ key ] = value;\n        return value;\n      }\n    }\n\n    // Remove all associated with the given element\n    function RemoveData( element ) {\n      var id = element && element[ expando ];\n      if ( id ) {\n        delete element[ id ]; // remove the id property from the element\n        delete cache[ id ]; // delete the data store for the element from the cache\n      }\n    }\n\n    /**\n     * Create element with attributes\n     * @param name {string} The name of the element to create\n     * @param attributes {object} (optional) any html attribute, plus several DOM properties:\n     * innerHTML, textContent, children (chilren takes an array and child nodes)\n     * @returns elem\n     */\n    function createElement( name, attributes ) {\n      var elem = document.createElement( name );\n\n      if ( attributes === undefined ) {\n        return elem;\n      }\n      // Handle attributes\n      forEach( attributes, function ( name ) {\n        var value = attributes[ name ];\n        if ( value === null ) return;\n        switch ( name ) {\n          // 'text' sets the text content\n          case 'textContent':\n            elem.textContent = value;\n            break;\n          // 'html' sets the innerHTML\n          case 'innerHTML':\n            elem.innerHTML = value;\n            break;\n          // 'children' one or more child nodes to insert into the element - can be single node, nodelist, array\n          case 'children':\n            forEach( value, function ( child ) {\n              isNode( child ) && elem.appendChild( child )\n            } );\n            break;\n          // handle standard attributes\n          default:\n            elem.setAttribute( name, value );\n        }\n      } )\n      return elem;\n    }\n\n    /**\n     * Handles the target elements parameter.\n     * Target elements can be passed into splitType in several different forms:\n     * Selector string, element, array/nodelist/jquery object, deep array\n     * This method converts those different formats into a plain array of elements.\n     * @returns:  {array}  the target elements\n     */\n    function _processElements( elements ) {\n      var elementsArray = [],\n          selector, isId, ID, len, len2, i, k;\n      // A. If elements is a selector string...\n      // ==> If its a single ID selector, use getElementById (super fast)\n      // ==> otherwise use querySelectorAll to find the set of matched elements.\n      if ( isString( elements ) ) {\n        selector = elements.trim();\n        isId     = selector[ 0 ] === '#' && ! /[^\\w]/.test( ID = selector.slice( 1 ) );\n        elements = isId ? document.getElementById( ID ) : document.querySelectorAll( selector );\n      }\n      // B. if we're certain that elements is a single node or nodelist,\n      // convert it to an array and return here.\n      if ( selector || isNode( elements ) ) {\n        return isNode( elements ) ? [ elements ] : slice.call( elements );\n      }\n\n      // if elements is an array or jquery/object...\n      // flatten it if necessary, remove any non-element values, and return the result.\n      if ( isArraylike( elements ) ) {\n        for ( i = 0, len = elements.length; i < len; i ++ ) {\n          if ( isArraylike( elements[ i ] ) ) {\n            for ( k = 0, len2 = elements[ i ].length; k < len2; k ++ ) {\n              if ( isNode( elements[ i ][ k ] ) ) {\n                elementsArray.push( elements[ i ][ k ] );\n              }\n            }\n          } else if ( isNode( elements[ i ] ) ) {\n            elementsArray.push( elements[ i ] );\n          }\n        }\n      }\n      return elementsArray;\n    }\n\n    /**\n     * Splits the text content of a single element using to the settings for the SplitType instance.\n     * By \"split\", we mean the process of breaking down plain text into separate components\n     * (lines, words, and characters) and wrapping each one in its own element.\n     * There are three possible split types: lines, words, and characters. Each one is optional,\n     * so text can be split into any combination of the three types.\n     *\n     * 'this' refers to the splitType instance from which this function was called.\n     * @param element node - the target element for the split operation.\n     */\n    function _split( element ) {\n      // Let o equal the settings for this SplitTypes instance.\n      var settings   = this.settings,\n          // the tag name for split text nodes\n          TAG_NAME   = settings.tagName,\n          // A unique string to tempNodeorarily replace <br> tags\n          BR_SYMBOL  = 'B' + (new Date() * 1) + 'R',\n          // The plain text content of the target element\n          TEXT_CONTENT,\n          // the split types to use (ie lines, words, characters)\n          types      = settings.split,\n          // (boolean) true if text is being split into lines\n          splitLines = types.indexOf( 'lines' ) !== - 1,\n          // (boolean) true if text is being split into words\n          splitWords = types.indexOf( 'words' ) !== - 1,\n          // (boolean) true if text is being split into characters\n          splitChars = types.indexOf( 'chars' ) !== - 1,\n          // (boolean) true if position is set to absolute\n          isAbsolute = settings.position === 'absolute' || settings.absolute === true,\n          // An empty element node\n          tempNode   = createElement( 'div' ),\n          // An array of the split lines in the current element\n          lineNodes  = [],\n          // An array of the split words in the current element\n          wordNodes  = [],\n          // An array of the split characters in the current element\n          charNodes  = [],\n          lineNode,\n          wordNode,\n          charNode,\n          splitText;\n\n\n      /*---------------------------------------\n       SPLIT TEXT INTO WORDS AND CHARACTERS\n       -----------------------------------------*/\n\n      // 1. splitText is a wrapper to hold the HTML structure while its being built.\n      splitText = splitLines ? createElement( 'div' ) : createFragment();\n\n      // 2. Get the element's text content.\n      //    temporarily replace <br> tags with a unique string before extracting text.\n      tempNode.innerHTML = element.innerHTML.replace( /<br\\s*\\/?>/g, (' ' + BR_SYMBOL + ' ') );\n      TEXT_CONTENT       = tempNode.textContent.replace( /\\s+/g, ' ' ).trim(); // remove extra white space\n\n      // 3. Iterate over each word in the text.\n      //    Create an array of wrapped the word elements (wordNodes).\n      //    WORD (string) refers to the current word in the loop.\n      wordNodes = TEXT_CONTENT.split( ' ' ).map( function ( WORD ) {\n\n        // a. If the current word is a symbol representing a br tag,\n        //    append a <br> tag to splitText and continue to the next word\n        if ( WORD === BR_SYMBOL ) {\n          splitText.appendChild( createElement( 'br' ) );\n          return null; // br tag is not added to the array of wordNodes\n        }\n\n        // b. If Splitting Text Into Characters...\n        if ( splitChars ) {\n\n          // i. Iterate through the characters in the current word\n          //    CHAR (string) refers to the current character in the loop\n          //    currentWordCharNodes is array of the wrapped character elements in this word\n          var currentWordCharNodes = WORD.split( '' ).map( function ( CHAR ) {\n            // Create an element to wrap the current character.\n            charNode = createElement( TAG_NAME, {\n              class       : settings.charClass + ' ' + settings.splitClass,\n              style       : \"display: inline-block;\",\n              textContent : CHAR\n            } );\n            return charNode;\n          } );\n\n          // ii. push the character nodes for this word to charNodes\n          push.apply( charNodes, currentWordCharNodes );\n\n        } // END IF;\n\n        // c. If Splitting Text Into Words...\n        if ( splitWords || splitLines ) {\n\n          // i. Let wordNode be an element to wrap the current word.\n          wordNode = createElement( TAG_NAME, {\n            class       : ( settings.wordClass + ' ' + settings.splitClass ),\n            style       : 'display: inline-block; position:' + ( splitWords ? 'relative' : 'static;' ),\n            // It contains the character nodes, or the word (plain text).\n            children    : splitChars ? currentWordCharNodes : null,\n            textContent : ! splitChars ? WORD : null\n          } );\n\n          // ii. Append wordNode to splitText.\n          splitText.appendChild( wordNode );\n\n        } // END IF;\n\n        // d. If NOT Splitting Words...\n        else {\n          // i. Append the character nodes directly to splitText.\n          forEach( currentWordCharNodes, function ( charNode ) {\n            splitText.appendChild( charNode );\n          } )\n        }\n\n        // e. Add a space after the word.\n        splitText.appendChild( createTextNode( ' ' ) );\n\n        return wordNode;\n\n      }, this ).filter( function ( el ) {\n        return el\n      } ); // remove any undefined/null entries from the array\n      // end forEach\n\n      // 4. Now remove the original contents of the target element and insert the split text.\n      element.innerHTML = '';\n      element.appendChild( splitText );\n\n      // 5. Add the split words/chars in this element to the array of all split words/chars.\n      push.apply( this.words, wordNodes );\n      push.apply( this.chars, charNodes );\n\n      // STOP HERE If not splitting text into lines or using absolute positioning\n      if ( ! isAbsolute && ! splitLines ) {\n        return;\n      }\n\n      /*---------------------------------\n       GET STYLES AND POSITIONS\n       ----------------------------------*/\n\n      // There is no built-in way to detect natural line breaks in text (when a block of text\n      // wraps to fit its container). So in order to split text into lines, we have to detect\n      // line breaks by checking the top offset of words. This is why text was split into words\n      // first. To apply absolute positioning, its also necessary to record the size and position\n      // of every split node (lines, words, characters).\n\n      // To consolidate DOM getting/settings, this is all done at the same time, before actually\n      // splitting text into lines, which involves restructuring the DOM again.\n\n      var lines = [],\n          currentLine,\n          lineOffsetY,\n          lineHeight,\n          contentBox,\n          elementHeight,\n          elementWidth,\n          nodes,\n          parent,\n          nextsib,\n          cs,\n          align;\n\n      // nodes is a live HTML collection of the nodes in this element\n      nodes = Data( element ).nodes = element.getElementsByTagName( TAG_NAME );\n\n      // Cache the element's parent and next sibling (for DOM removal).\n      parent  = element.parentElement;\n      nextsib = element.nextElementSibling;\n\n      // get the computed style object for the element\n      cs    = window.getComputedStyle( element );\n      align = cs.textAlign;\n\n      // If using absolute position...\n      if ( isAbsolute ) {\n\n        // Let contentBox be an object containing the width and offset position of the element's\n        // content box (the area inside padding box). This is needed (for absolute positioning)\n        // to set the width and position of line elements, which have not been created yet.\n        contentBox = {\n          left  : splitText.offsetLeft,\n          top   : splitText.offsetTop,\n          width : splitText.offsetWidth\n        };\n\n        // Let elementWidth and elementHeight equal the actual width/height of the element.\n        // Also check if the element has inline height or width styles already set.\n        // If it does, cache those values for later.\n        elementWidth  = element.offsetWidth;\n        elementHeight = element.offsetHeight;\n\n        Data( element ).cssWidth  = element.style.width;\n        Data( element ).cssHeight = element.style.height;\n      }\n\n      // 6. Iterate over every split text node\n      forEach( nodes, function ( node ) {\n        if ( node === splitText ) return;\n\n        var isWord = node.parentElement === splitText;\n        var wordOffsetY;\n        // a. Detect line breaks by checking the top offset of word nodes.\n        //    For each line, create an array (line) containing the words in that line.\n        if ( splitLines && isWord ) {\n          // wordOffsetY is the top offset of the current word.\n          wordOffsetY = Data( node ).top = node.offsetTop;\n\n          // If wordOffsetY is different than the value of lineOffsetY...\n          // Then this word is the beginning of a new line.\n          // Set lineOffsetY to value of wordOffsetY.\n          // Create a new array (line) to hold the words in this line.\n          if ( wordOffsetY !== lineOffsetY ) {\n            lineOffsetY = wordOffsetY;\n            lines.push( currentLine = [] );\n          }\n\n          // Add the current word node to the line array\n          currentLine.push( node );\n        }\n\n        // b. Get the size and position of all split text nodes.\n        if ( isAbsolute ) {\n          // The values are stored using the data method\n          // All split nodes have the same height (lineHeight). So its only retrieved once.\n          // If offset top has already been cached (step 11 a) use the stored value.\n          Data( node ).top    = wordOffsetY || node.offsetTop;\n          Data( node ).left   = node.offsetLeft;\n          Data( node ).width  = node.offsetWidth;\n          Data( node ).height = lineHeight || ( lineHeight = node.offsetHeight );\n        }\n\n      } ) // END LOOP\n\n      // 7. Remove the element from the DOM\n      parent.removeChild( element );\n\n\n      /*--------------------------------\n       SPLIT LINES\n       ----------------------------------*/\n\n      if ( splitLines ) {\n\n        // 8. Let splitText be a new document createFragment to hold the HTML structure.\n        splitText = createFragment();\n\n        // 9. Iterate over the arrays in lines (see 11 b)\n        //     Let line be the array of words in the current line.\n        //     Return an array of the wrapped line elements (lineNodes)\n        lineNodes = lines.map( function ( line ) {\n\n          // a. Create a new element (lineNode) to wrap the current line.\n          //    Append lineNode to splitText.\n          splitText.appendChild(\n            lineNode = createElement( TAG_NAME, {\n              class : settings.lineClass + ' ' + settings.splitClass,\n              style : 'display: block; text-align:' + align + '; width: 100%;'\n            } )\n          );\n\n          // b. store size/position values for the line element.\n          if ( isAbsolute ) {\n            Data( lineNode ).type   = 'line';\n            Data( lineNode ).top    = Data( line[ 0 ] ).top; // the offset top of the first word in the line\n            Data( lineNode ).height = lineHeight;\n          }\n\n          // c. Iterate over the word elements in the current line.\n          //    wordNode refers to the current word in the loop.\n          forEach( line, function ( wordNode ) {\n\n            // i. If splitting text into words,\n            // just append wordNode to the line element.\n            if ( splitWords ) {\n              lineNode.appendChild( wordNode );\n\n              // ii. If NOT splitting into words...\n              //     if splitting characters append the char nodes to the line element\n            } else if ( splitChars ) {\n              slice.call( wordNode.children ).forEach( function ( charNode ) {\n                lineNode.appendChild( charNode );\n              } )\n            }\n            // iii. If NOT splitting into words OR characters...\n            //      append the plain text content of the word to the line element\n            else {\n              lineNode.appendChild( createTextNode( wordNode.textContent ) )\n            }\n            // iV. add a space after the word\n            lineNode.appendChild( createTextNode( ' ' ) );\n          } ) // END LOOP\n\n          return lineNode;\n        } ) // END LOOP\n\n        // 10. Insert the new splitText\n        element.replaceChild( splitText, element.firstChild );\n\n        // 11. Add the split line elements to the array of all split lines\n        push.apply( this.lines, lineNodes );\n      }\n\n      /*---------------------------------\n       SET ABSOLUTE POSITION\n       ----------------------------------*/\n\n      // Apply absolute positioning to all split text elements (lines, words, and characters).\n      // The size and relative position of split nodes has already been recorded. Now we use those\n      // values to set each element to absolute position. However, positions were logged before\n      // text was split into lines (step 13 - 15). So some values need to be recalcated to account\n      // for the modified DOM structure.\n\n      if ( isAbsolute ) {\n\n        // 12. Set the width/height of the parent element, so it does not collapse when its\n        //     child nodes are set to absolute position.\n        element.style.width  = element.style.width || elementWidth + 'px';\n        element.style.height = elementHeight + 'px';\n\n        // 13. Iterate over all split nodes.\n        //     Let node be current node in the loop\n        forEach( nodes, function ( node ) {\n\n          // a. Let isLine be true if the current node is a line element\n          //    Let isLineChild be true if the current node is a direct child of a line element.\n          var isLine      = Data( node ).type === 'line';\n          var isLineChild = ! isLine && Data( node.parentElement ).type === 'line';\n\n          // b. Set the top position of the current node.\n          //    If its a line node, we use the top offset of its first child (see step 14 b)\n          //    If its the child of line node, then its top offset is zero\n          node.style.top = isLineChild ? 0 : Data( node ).top + 'px';\n\n          // c. Set the left position of the current node.\n          //    If its a line node, this this is equal to the left offset of contentBox (step 9).\n          //    If its the child of a line node, the cached valued must be recalculated so its\n          //    relative to the line node (which didn't exist when value was initially checked).\n          // NOTE: the value is recalculated without querying the DOM again\n          node.style.left = isLine ? (contentBox.left + 'px') :\n          ( isLineChild ? ( Data( node ).left - contentBox.left ) :\n            Data( node ).left ) + 'px';\n\n          // d. Set the height of the current node to the cached value.\n          node.style.height = Data( node ).height + 'px';\n\n          // e. Set the width of the current node.\n          //    If its a line element, width is equal to the width of the contentBox (see step 9).\n          node.style.width = isLine ? (contentBox.width + 'px') : Data( node ).width + 'px';\n\n          // f. Finally, set the node's position to absolute.\n          node.style.position = 'absolute';\n        } )\n      } // end if;\n\n      // 14. Re-attach the element to the DOM\n      if ( nextsib ) parent.insertBefore( element, nextsib );\n      else parent.appendChild( element );\n\n    } // End Function\n\n    /***************************\n     SplitType Constructor\n     ***************************/\n\n    function SplitType( elements, options ) {\n      // Allow the SplitType constructor to be called without 'new'\n      if ( ! ( this instanceof SplitType ) ) {\n        return new SplitType( elements, options );\n      }\n      this.isSplit  = false;\n      // Merge options with defaults\n      this.settings = extend( _defaults, options );\n      // Prepare target elements\n      this.elements = _processElements( elements );\n\n      if ( this.elements.length ) {\n        // Store the original HTML content of each target element\n        this.originals = this.elements.map( function ( element ) {\n          return ( Data( element ).html = Data( element ).html || element.innerHTML );\n        } );\n\n        // Initiate the split operation.\n        this.split();\n      }\n    }\n\n\n    /*********************************\n     PUBLIC PROPERTIES AND METHODS\n     *********************************/\n\n    /**\n     * SplitType.defaults\n     * A public property on the global SplitType object that allows users to access or modify the\n     * default settings. Multiple settings can be changed at once by assigning an object to\n     * SplitType.defaults containing the settings you wish to change. This will merge the new settings\n     * with the internal _defaults object, not overwrite it.\n     * To access the current settings: SplitType.defaults\n     * To modify settings: SplitType.defaults = {setting1: 'new value', setting2: 'new value'}\n     * @public\n     * @static\n     */\n    defineProperty( SplitType, 'defaults', {\n      get : function () {\n        return _defaults;\n      },\n      set : function ( object ) {\n        _defaults = extend( _defaults, object );\n      }\n    } );\n\n    /**\n     * instance.split()\n     * Splits text in the target elements. This method gets called automatically when a new SplitType\n     * instance is created. The method can also be called manually to re-split text with new options.\n     * @param newOptions: (object) modifies the settings for the splitType instance.\n     * @public\n     */\n    SplitType.prototype.split = function split( newOptions ) {\n      // If any of the target elements have already been split,\n      // revert them back to their original content before splitting them.\n      this.revert();\n\n      // Create arrays to hold the split lines, words, and characters for this instance.\n      // These are public properties which can be accessed on the SplitType instance.\n      this.lines = [];\n      this.words = [];\n      this.chars = [];\n\n      // cache vertical scroll position before splitting\n      var scrollPos = [ window.pageXoffset, window.pageYoffset ];\n\n      // If new options were passed into the split() method, update settings for the instance.\n      if ( newOptions !== undefined ) {\n        this.settings = extend( this.settings, newOptions );\n      }\n\n      // Call the _split function to split the text in each target element\n      forEach( this.elements, function ( element ) {\n        _split.call( this, element );\n        Data( element ).isSplit = true; // Set isSplit to true for this element.\n      }, this );\n\n      // Set isSplit to true for the SplitType instance\n      this.isSplit = true;\n\n      // Set scroll position to cached value.\n      window.scrollTo.apply( window, scrollPos );\n\n      // Clear data Cache\n      forEach( this.elements, function ( element ) {\n        var nodes = Data( element ).nodes || [];\n        for ( var i = 0, len = nodes.length; i < len; i ++ ) {\n          RemoveData( nodes[ i ] );\n        }\n      } )\n    }\n\n    /**\n     * revert\n     * Reverts the target elements back to their original html content.\n     * @public\n     */\n    SplitType.prototype.revert = function revert() {\n      // Delete the arrays of split text elements from the SplitType instance.\n      // @NOTE: these properties are non-writable, that is why they have to be\n      // deleted instead of just setting their value to null.\n      if ( this.isSplit ) {\n        this.lines = this.words = this.chars = null;\n      }\n\n      // Remove split text from target elements and restore original content\n      forEach( this.elements, function ( elem ) {\n        if ( Data( elem ).isSplit && Data( elem ).html ) {\n          elem.innerHTML    = Data( elem ).html;\n          elem.style.height = Data( elem ).cssHeight || '';\n          elem.style.width  = Data( elem ).cssWidth || '';\n          this.isSplit      = false;\n        }\n      }, this );\n    }\n    return SplitType;\n  })( window, document )\n} )"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/typesplit/splittype.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/typesplit/splittype.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}}],"sources":{"node_modules/typesplit/splittype.js":"/**\n * SplitType\n * A javascript utility that splits text into individual lines, words, and characters\n * so they can be animated and styled independently.\n * @updated: 6/6/2016\n * @author: Luke Peavey\n * @version: 1.0\n * @license MIT\n */\n\n\n// Support module loaders\n(function ( global, factory ) {\n  if ( typeof define === 'function' && define.amd ) {\n    define( factory );\n  } else if ( typeof exports !== 'undefined' ) {\n    module.exports = factory();\n  } else {\n    factory();\n  }\n})( this, function factory() {\n  window.SplitType = (function ( window, document, undefined ) {\n    // Fail silently on ancient browsers ( IE <= 8 )\n    if ( ! document.addEventListener || ! Function.prototype.bind ) return;\n\n    'use strict';\n    // global vars\n    var DEBUG                 = false;\n    var expando               = 'splitType' + (new Date() * 1);\n    var cache                 = {};\n    var uid                   = 0;\n    var push                  = Array.prototype.push;\n    var slice                 = Array.prototype.slice;\n    var keys                  = Object.keys;\n    var hasOwn                = Object.prototype.hasOwnProperty;\n    var defineProperty        = Object.defineProperty;\n    var defineProperties      = Object.defineProperties;\n    var getPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var createFragment        = document.createDocumentFragment.bind( document );\n    var createTextNode        = document.createTextNode.bind( document );\n\n    /**\n     * The global default settings used for all SplitType calls. Default\n     * settings can be modified via the static 'defaults' property on the\n     * SplitType constructor.\n     * @private\n     */\n    var _defaults = {\n      splitClass : '',\n      lineClass  : 'line',\n      wordClass  : 'word',\n      charClass  : 'char',\n      split      : 'lines, words, chars',\n      position   : 'relative',\n      absolute   : false, // alternate syntax for setting position.\n      tagName    : 'div',\n      DEBUG      : false,\n    };\n\n\n    /***********************\n     - Utility Functions -\n     ***********************/\n    function isObject( obj ) {\n      return obj !== null && typeof obj === 'object';\n    }\n\n    function isArraylike( obj ) {\n      return isObject( obj ) && typeof obj.length === 'number' && obj.length > 0; // returns false for empty arrays,\n                                                                                  // which is fine for our purposes\n    }\n\n    function isPlainObject( obj ) {\n      return isObject( obj ) && Object.prototype.toString.call( obj ) === '[object Object]';\n    }\n\n    function isNode( obj ) {\n      return isObject( obj ) && /^(1|3|11)$/.test( obj.nodeType );\n    }\n\n    function isString( obj ) {\n      return typeof obj === 'string';\n    }\n\n    /**\n     * Iterates array, arraylike, and plain objects\n     * NOTE: non-iterable objects gets passed through\n     * @param object object|array - the array or object to iterate\n     * @param callback function - a function to be executed once for each item in the array.\n     * @param thisArg object - the context for the callback function\n     */\n    function forEach( object, callback, thisArg ) {\n      var obj    = Object( object ); // the target object\n      var values = isArraylike( obj ) ? obj : ( isPlainObject( obj ) ? keys( obj ) : [ obj ] ); // the values to\n                                                                                                // traverse (see doc\n                                                                                                // comment)\n      var length = parseInt( values.length ) || 0; // the length of values\n      var index  = 0; // index\n      // Iterate through the values, execute the callback with three arguments:\n      // 1) the current item 2) the current index 3) the object being traversed.\n      for ( ; index < length; index ++ ) {\n        callback.call( thisArg, values[ index ], index, obj );\n      }\n    }\n\n    /**\n     * Merges user options with default settings (shallow).\n     * Returns a new object without modifying source objects.\n     * Only keys that exist on target obj will be copied to the new object.\n     * @note: non-writable properties on the target object will not be over-ridden\n     * @returns object\n     */\n    function extend( target, object ) {\n      target = Object( target );\n      object = Object( object );\n      return Object.getOwnPropertyNames( target ).reduce( function ( extended, key ) {\n        return defineProperty( extended, key, getPropertyDescriptor( object, key ) || getPropertyDescriptor( target, key ) );\n      }, {} )\n    }\n\n    /**\n     * Associates arbitrary data with DOM nodes or other objects.\n     * (shortened version of jquery's data method)\n     * @param element object - the element for which data is being set or retrieved.\n     * @param key string (optional) - the name of the data property to set or retrieve.\n     * @param value mixed (optional) - Sets the value of the specified key. any type of data.\n     */\n    function Data( element, key, value ) {\n      var data = {}, id;\n\n      if ( isObject( element ) ) {\n        id   = element[ expando ] || ( element[ expando ] = ++ uid );\n        data = cache[ id ] || ( cache[ id ] = {} );\n      }\n      // Get data\n      if ( value === undefined ) {\n        if ( key === undefined ) {\n          return data; // if no key or value is given, return the data store object\n        }\n        return data[ key ];\n      }\n      // Set data\n      else if ( key !== undefined ) {\n        data[ key ] = value;\n        return value;\n      }\n    }\n\n    // Remove all associated with the given element\n    function RemoveData( element ) {\n      var id = element && element[ expando ];\n      if ( id ) {\n        delete element[ id ]; // remove the id property from the element\n        delete cache[ id ]; // delete the data store for the element from the cache\n      }\n    }\n\n    /**\n     * Create element with attributes\n     * @param name {string} The name of the element to create\n     * @param attributes {object} (optional) any html attribute, plus several DOM properties:\n     * innerHTML, textContent, children (chilren takes an array and child nodes)\n     * @returns elem\n     */\n    function createElement( name, attributes ) {\n      var elem = document.createElement( name );\n\n      if ( attributes === undefined ) {\n        return elem;\n      }\n      // Handle attributes\n      forEach( attributes, function ( name ) {\n        var value = attributes[ name ];\n        if ( value === null ) return;\n        switch ( name ) {\n          // 'text' sets the text content\n          case 'textContent':\n            elem.textContent = value;\n            break;\n          // 'html' sets the innerHTML\n          case 'innerHTML':\n            elem.innerHTML = value;\n            break;\n          // 'children' one or more child nodes to insert into the element - can be single node, nodelist, array\n          case 'children':\n            forEach( value, function ( child ) {\n              isNode( child ) && elem.appendChild( child )\n            } );\n            break;\n          // handle standard attributes\n          default:\n            elem.setAttribute( name, value );\n        }\n      } )\n      return elem;\n    }\n\n    /**\n     * Handles the target elements parameter.\n     * Target elements can be passed into splitType in several different forms:\n     * Selector string, element, array/nodelist/jquery object, deep array\n     * This method converts those different formats into a plain array of elements.\n     * @returns:  {array}  the target elements\n     */\n    function _processElements( elements ) {\n      var elementsArray = [],\n          selector, isId, ID, len, len2, i, k;\n      // A. If elements is a selector string...\n      // ==> If its a single ID selector, use getElementById (super fast)\n      // ==> otherwise use querySelectorAll to find the set of matched elements.\n      if ( isString( elements ) ) {\n        selector = elements.trim();\n        isId     = selector[ 0 ] === '#' && ! /[^\\w]/.test( ID = selector.slice( 1 ) );\n        elements = isId ? document.getElementById( ID ) : document.querySelectorAll( selector );\n      }\n      // B. if we're certain that elements is a single node or nodelist,\n      // convert it to an array and return here.\n      if ( selector || isNode( elements ) ) {\n        return isNode( elements ) ? [ elements ] : slice.call( elements );\n      }\n\n      // if elements is an array or jquery/object...\n      // flatten it if necessary, remove any non-element values, and return the result.\n      if ( isArraylike( elements ) ) {\n        for ( i = 0, len = elements.length; i < len; i ++ ) {\n          if ( isArraylike( elements[ i ] ) ) {\n            for ( k = 0, len2 = elements[ i ].length; k < len2; k ++ ) {\n              if ( isNode( elements[ i ][ k ] ) ) {\n                elementsArray.push( elements[ i ][ k ] );\n              }\n            }\n          } else if ( isNode( elements[ i ] ) ) {\n            elementsArray.push( elements[ i ] );\n          }\n        }\n      }\n      return elementsArray;\n    }\n\n    /**\n     * Splits the text content of a single element using to the settings for the SplitType instance.\n     * By \"split\", we mean the process of breaking down plain text into separate components\n     * (lines, words, and characters) and wrapping each one in its own element.\n     * There are three possible split types: lines, words, and characters. Each one is optional,\n     * so text can be split into any combination of the three types.\n     *\n     * 'this' refers to the splitType instance from which this function was called.\n     * @param element node - the target element for the split operation.\n     */\n    function _split( element ) {\n      // Let o equal the settings for this SplitTypes instance.\n      var settings   = this.settings,\n          // the tag name for split text nodes\n          TAG_NAME   = settings.tagName,\n          // A unique string to tempNodeorarily replace <br> tags\n          BR_SYMBOL  = 'B' + (new Date() * 1) + 'R',\n          // The plain text content of the target element\n          TEXT_CONTENT,\n          // the split types to use (ie lines, words, characters)\n          types      = settings.split,\n          // (boolean) true if text is being split into lines\n          splitLines = types.indexOf( 'lines' ) !== - 1,\n          // (boolean) true if text is being split into words\n          splitWords = types.indexOf( 'words' ) !== - 1,\n          // (boolean) true if text is being split into characters\n          splitChars = types.indexOf( 'chars' ) !== - 1,\n          // (boolean) true if position is set to absolute\n          isAbsolute = settings.position === 'absolute' || settings.absolute === true,\n          // An empty element node\n          tempNode   = createElement( 'div' ),\n          // An array of the split lines in the current element\n          lineNodes  = [],\n          // An array of the split words in the current element\n          wordNodes  = [],\n          // An array of the split characters in the current element\n          charNodes  = [],\n          lineNode,\n          wordNode,\n          charNode,\n          splitText;\n\n\n      /*---------------------------------------\n       SPLIT TEXT INTO WORDS AND CHARACTERS\n       -----------------------------------------*/\n\n      // 1. splitText is a wrapper to hold the HTML structure while its being built.\n      splitText = splitLines ? createElement( 'div' ) : createFragment();\n\n      // 2. Get the element's text content.\n      //    temporarily replace <br> tags with a unique string before extracting text.\n      tempNode.innerHTML = element.innerHTML.replace( /<br\\s*\\/?>/g, (' ' + BR_SYMBOL + ' ') );\n      TEXT_CONTENT       = tempNode.textContent.replace( /\\s+/g, ' ' ).trim(); // remove extra white space\n\n      // 3. Iterate over each word in the text.\n      //    Create an array of wrapped the word elements (wordNodes).\n      //    WORD (string) refers to the current word in the loop.\n      wordNodes = TEXT_CONTENT.split( ' ' ).map( function ( WORD ) {\n\n        // a. If the current word is a symbol representing a br tag,\n        //    append a <br> tag to splitText and continue to the next word\n        if ( WORD === BR_SYMBOL ) {\n          splitText.appendChild( createElement( 'br' ) );\n          return null; // br tag is not added to the array of wordNodes\n        }\n\n        // b. If Splitting Text Into Characters...\n        if ( splitChars ) {\n\n          // i. Iterate through the characters in the current word\n          //    CHAR (string) refers to the current character in the loop\n          //    currentWordCharNodes is array of the wrapped character elements in this word\n          var currentWordCharNodes = WORD.split( '' ).map( function ( CHAR ) {\n            // Create an element to wrap the current character.\n            charNode = createElement( TAG_NAME, {\n              class       : settings.charClass + ' ' + settings.splitClass,\n              style       : \"display: inline-block;\",\n              textContent : CHAR\n            } );\n            return charNode;\n          } );\n\n          // ii. push the character nodes for this word to charNodes\n          push.apply( charNodes, currentWordCharNodes );\n\n        } // END IF;\n\n        // c. If Splitting Text Into Words...\n        if ( splitWords || splitLines ) {\n\n          // i. Let wordNode be an element to wrap the current word.\n          wordNode = createElement( TAG_NAME, {\n            class       : ( settings.wordClass + ' ' + settings.splitClass ),\n            style       : 'display: inline-block; position:' + ( splitWords ? 'relative' : 'static;' ),\n            // It contains the character nodes, or the word (plain text).\n            children    : splitChars ? currentWordCharNodes : null,\n            textContent : ! splitChars ? WORD : null\n          } );\n\n          // ii. Append wordNode to splitText.\n          splitText.appendChild( wordNode );\n\n        } // END IF;\n\n        // d. If NOT Splitting Words...\n        else {\n          // i. Append the character nodes directly to splitText.\n          forEach( currentWordCharNodes, function ( charNode ) {\n            splitText.appendChild( charNode );\n          } )\n        }\n\n        // e. Add a space after the word.\n        splitText.appendChild( createTextNode( ' ' ) );\n\n        return wordNode;\n\n      }, this ).filter( function ( el ) {\n        return el\n      } ); // remove any undefined/null entries from the array\n      // end forEach\n\n      // 4. Now remove the original contents of the target element and insert the split text.\n      element.innerHTML = '';\n      element.appendChild( splitText );\n\n      // 5. Add the split words/chars in this element to the array of all split words/chars.\n      push.apply( this.words, wordNodes );\n      push.apply( this.chars, charNodes );\n\n      // STOP HERE If not splitting text into lines or using absolute positioning\n      if ( ! isAbsolute && ! splitLines ) {\n        return;\n      }\n\n      /*---------------------------------\n       GET STYLES AND POSITIONS\n       ----------------------------------*/\n\n      // There is no built-in way to detect natural line breaks in text (when a block of text\n      // wraps to fit its container). So in order to split text into lines, we have to detect\n      // line breaks by checking the top offset of words. This is why text was split into words\n      // first. To apply absolute positioning, its also necessary to record the size and position\n      // of every split node (lines, words, characters).\n\n      // To consolidate DOM getting/settings, this is all done at the same time, before actually\n      // splitting text into lines, which involves restructuring the DOM again.\n\n      var lines = [],\n          currentLine,\n          lineOffsetY,\n          lineHeight,\n          contentBox,\n          elementHeight,\n          elementWidth,\n          nodes,\n          parent,\n          nextsib,\n          cs,\n          align;\n\n      // nodes is a live HTML collection of the nodes in this element\n      nodes = Data( element ).nodes = element.getElementsByTagName( TAG_NAME );\n\n      // Cache the element's parent and next sibling (for DOM removal).\n      parent  = element.parentElement;\n      nextsib = element.nextElementSibling;\n\n      // get the computed style object for the element\n      cs    = window.getComputedStyle( element );\n      align = cs.textAlign;\n\n      // If using absolute position...\n      if ( isAbsolute ) {\n\n        // Let contentBox be an object containing the width and offset position of the element's\n        // content box (the area inside padding box). This is needed (for absolute positioning)\n        // to set the width and position of line elements, which have not been created yet.\n        contentBox = {\n          left  : splitText.offsetLeft,\n          top   : splitText.offsetTop,\n          width : splitText.offsetWidth\n        };\n\n        // Let elementWidth and elementHeight equal the actual width/height of the element.\n        // Also check if the element has inline height or width styles already set.\n        // If it does, cache those values for later.\n        elementWidth  = element.offsetWidth;\n        elementHeight = element.offsetHeight;\n\n        Data( element ).cssWidth  = element.style.width;\n        Data( element ).cssHeight = element.style.height;\n      }\n\n      // 6. Iterate over every split text node\n      forEach( nodes, function ( node ) {\n        if ( node === splitText ) return;\n\n        var isWord = node.parentElement === splitText;\n        var wordOffsetY;\n        // a. Detect line breaks by checking the top offset of word nodes.\n        //    For each line, create an array (line) containing the words in that line.\n        if ( splitLines && isWord ) {\n          // wordOffsetY is the top offset of the current word.\n          wordOffsetY = Data( node ).top = node.offsetTop;\n\n          // If wordOffsetY is different than the value of lineOffsetY...\n          // Then this word is the beginning of a new line.\n          // Set lineOffsetY to value of wordOffsetY.\n          // Create a new array (line) to hold the words in this line.\n          if ( wordOffsetY !== lineOffsetY ) {\n            lineOffsetY = wordOffsetY;\n            lines.push( currentLine = [] );\n          }\n\n          // Add the current word node to the line array\n          currentLine.push( node );\n        }\n\n        // b. Get the size and position of all split text nodes.\n        if ( isAbsolute ) {\n          // The values are stored using the data method\n          // All split nodes have the same height (lineHeight). So its only retrieved once.\n          // If offset top has already been cached (step 11 a) use the stored value.\n          Data( node ).top    = wordOffsetY || node.offsetTop;\n          Data( node ).left   = node.offsetLeft;\n          Data( node ).width  = node.offsetWidth;\n          Data( node ).height = lineHeight || ( lineHeight = node.offsetHeight );\n        }\n\n      } ) // END LOOP\n\n      // 7. Remove the element from the DOM\n      parent.removeChild( element );\n\n\n      /*--------------------------------\n       SPLIT LINES\n       ----------------------------------*/\n\n      if ( splitLines ) {\n\n        // 8. Let splitText be a new document createFragment to hold the HTML structure.\n        splitText = createFragment();\n\n        // 9. Iterate over the arrays in lines (see 11 b)\n        //     Let line be the array of words in the current line.\n        //     Return an array of the wrapped line elements (lineNodes)\n        lineNodes = lines.map( function ( line ) {\n\n          // a. Create a new element (lineNode) to wrap the current line.\n          //    Append lineNode to splitText.\n          splitText.appendChild(\n            lineNode = createElement( TAG_NAME, {\n              class : settings.lineClass + ' ' + settings.splitClass,\n              style : 'display: block; text-align:' + align + '; width: 100%;'\n            } )\n          );\n\n          // b. store size/position values for the line element.\n          if ( isAbsolute ) {\n            Data( lineNode ).type   = 'line';\n            Data( lineNode ).top    = Data( line[ 0 ] ).top; // the offset top of the first word in the line\n            Data( lineNode ).height = lineHeight;\n          }\n\n          // c. Iterate over the word elements in the current line.\n          //    wordNode refers to the current word in the loop.\n          forEach( line, function ( wordNode ) {\n\n            // i. If splitting text into words,\n            // just append wordNode to the line element.\n            if ( splitWords ) {\n              lineNode.appendChild( wordNode );\n\n              // ii. If NOT splitting into words...\n              //     if splitting characters append the char nodes to the line element\n            } else if ( splitChars ) {\n              slice.call( wordNode.children ).forEach( function ( charNode ) {\n                lineNode.appendChild( charNode );\n              } )\n            }\n            // iii. If NOT splitting into words OR characters...\n            //      append the plain text content of the word to the line element\n            else {\n              lineNode.appendChild( createTextNode( wordNode.textContent ) )\n            }\n            // iV. add a space after the word\n            lineNode.appendChild( createTextNode( ' ' ) );\n          } ) // END LOOP\n\n          return lineNode;\n        } ) // END LOOP\n\n        // 10. Insert the new splitText\n        element.replaceChild( splitText, element.firstChild );\n\n        // 11. Add the split line elements to the array of all split lines\n        push.apply( this.lines, lineNodes );\n      }\n\n      /*---------------------------------\n       SET ABSOLUTE POSITION\n       ----------------------------------*/\n\n      // Apply absolute positioning to all split text elements (lines, words, and characters).\n      // The size and relative position of split nodes has already been recorded. Now we use those\n      // values to set each element to absolute position. However, positions were logged before\n      // text was split into lines (step 13 - 15). So some values need to be recalcated to account\n      // for the modified DOM structure.\n\n      if ( isAbsolute ) {\n\n        // 12. Set the width/height of the parent element, so it does not collapse when its\n        //     child nodes are set to absolute position.\n        element.style.width  = element.style.width || elementWidth + 'px';\n        element.style.height = elementHeight + 'px';\n\n        // 13. Iterate over all split nodes.\n        //     Let node be current node in the loop\n        forEach( nodes, function ( node ) {\n\n          // a. Let isLine be true if the current node is a line element\n          //    Let isLineChild be true if the current node is a direct child of a line element.\n          var isLine      = Data( node ).type === 'line';\n          var isLineChild = ! isLine && Data( node.parentElement ).type === 'line';\n\n          // b. Set the top position of the current node.\n          //    If its a line node, we use the top offset of its first child (see step 14 b)\n          //    If its the child of line node, then its top offset is zero\n          node.style.top = isLineChild ? 0 : Data( node ).top + 'px';\n\n          // c. Set the left position of the current node.\n          //    If its a line node, this this is equal to the left offset of contentBox (step 9).\n          //    If its the child of a line node, the cached valued must be recalculated so its\n          //    relative to the line node (which didn't exist when value was initially checked).\n          // NOTE: the value is recalculated without querying the DOM again\n          node.style.left = isLine ? (contentBox.left + 'px') :\n          ( isLineChild ? ( Data( node ).left - contentBox.left ) :\n            Data( node ).left ) + 'px';\n\n          // d. Set the height of the current node to the cached value.\n          node.style.height = Data( node ).height + 'px';\n\n          // e. Set the width of the current node.\n          //    If its a line element, width is equal to the width of the contentBox (see step 9).\n          node.style.width = isLine ? (contentBox.width + 'px') : Data( node ).width + 'px';\n\n          // f. Finally, set the node's position to absolute.\n          node.style.position = 'absolute';\n        } )\n      } // end if;\n\n      // 14. Re-attach the element to the DOM\n      if ( nextsib ) parent.insertBefore( element, nextsib );\n      else parent.appendChild( element );\n\n    } // End Function\n\n    /***************************\n     SplitType Constructor\n     ***************************/\n\n    function SplitType( elements, options ) {\n      // Allow the SplitType constructor to be called without 'new'\n      if ( ! ( this instanceof SplitType ) ) {\n        return new SplitType( elements, options );\n      }\n      this.isSplit  = false;\n      // Merge options with defaults\n      this.settings = extend( _defaults, options );\n      // Prepare target elements\n      this.elements = _processElements( elements );\n\n      if ( this.elements.length ) {\n        // Store the original HTML content of each target element\n        this.originals = this.elements.map( function ( element ) {\n          return ( Data( element ).html = Data( element ).html || element.innerHTML );\n        } );\n\n        // Initiate the split operation.\n        this.split();\n      }\n    }\n\n\n    /*********************************\n     PUBLIC PROPERTIES AND METHODS\n     *********************************/\n\n    /**\n     * SplitType.defaults\n     * A public property on the global SplitType object that allows users to access or modify the\n     * default settings. Multiple settings can be changed at once by assigning an object to\n     * SplitType.defaults containing the settings you wish to change. This will merge the new settings\n     * with the internal _defaults object, not overwrite it.\n     * To access the current settings: SplitType.defaults\n     * To modify settings: SplitType.defaults = {setting1: 'new value', setting2: 'new value'}\n     * @public\n     * @static\n     */\n    defineProperty( SplitType, 'defaults', {\n      get : function () {\n        return _defaults;\n      },\n      set : function ( object ) {\n        _defaults = extend( _defaults, object );\n      }\n    } );\n\n    /**\n     * instance.split()\n     * Splits text in the target elements. This method gets called automatically when a new SplitType\n     * instance is created. The method can also be called manually to re-split text with new options.\n     * @param newOptions: (object) modifies the settings for the splitType instance.\n     * @public\n     */\n    SplitType.prototype.split = function split( newOptions ) {\n      // If any of the target elements have already been split,\n      // revert them back to their original content before splitting them.\n      this.revert();\n\n      // Create arrays to hold the split lines, words, and characters for this instance.\n      // These are public properties which can be accessed on the SplitType instance.\n      this.lines = [];\n      this.words = [];\n      this.chars = [];\n\n      // cache vertical scroll position before splitting\n      var scrollPos = [ window.pageXoffset, window.pageYoffset ];\n\n      // If new options were passed into the split() method, update settings for the instance.\n      if ( newOptions !== undefined ) {\n        this.settings = extend( this.settings, newOptions );\n      }\n\n      // Call the _split function to split the text in each target element\n      forEach( this.elements, function ( element ) {\n        _split.call( this, element );\n        Data( element ).isSplit = true; // Set isSplit to true for this element.\n      }, this );\n\n      // Set isSplit to true for the SplitType instance\n      this.isSplit = true;\n\n      // Set scroll position to cached value.\n      window.scrollTo.apply( window, scrollPos );\n\n      // Clear data Cache\n      forEach( this.elements, function ( element ) {\n        var nodes = Data( element ).nodes || [];\n        for ( var i = 0, len = nodes.length; i < len; i ++ ) {\n          RemoveData( nodes[ i ] );\n        }\n      } )\n    }\n\n    /**\n     * revert\n     * Reverts the target elements back to their original html content.\n     * @public\n     */\n    SplitType.prototype.revert = function revert() {\n      // Delete the arrays of split text elements from the SplitType instance.\n      // @NOTE: these properties are non-writable, that is why they have to be\n      // deleted instead of just setting their value to null.\n      if ( this.isSplit ) {\n        this.lines = this.words = this.chars = null;\n      }\n\n      // Remove split text from target elements and restore original content\n      forEach( this.elements, function ( elem ) {\n        if ( Data( elem ).isSplit && Data( elem ).html ) {\n          elem.innerHTML    = Data( elem ).html;\n          elem.style.height = Data( elem ).cssHeight || '';\n          elem.style.width  = Data( elem ).cssWidth || '';\n          this.isSplit      = false;\n        }\n      }, this );\n    }\n    return SplitType;\n  })( window, document )\n} )"},"lineCount":724}},"error":null,"hash":"0e9a1b52c992474a487d701ec3898844","cacheData":{"env":{}}}